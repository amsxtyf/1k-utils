"use strict";(self.webpackChunkdocusaurus_2=self.webpackChunkdocusaurus_2||[]).push([[107],{3905:function(e,t,r){r.d(t,{Zo:function(){return p},kt:function(){return d}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function u(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?u(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):u(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},u=Object.keys(e);for(n=0;n<u.length;n++)r=u[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var u=Object.getOwnPropertySymbols(e);for(n=0;n<u.length;n++)r=u[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=n.createContext({}),s=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},p=function(e){var t=s(e.components);return n.createElement(c.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,u=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),m=s(r),d=o,h=m["".concat(c,".").concat(d)]||m[d]||l[d]||u;return r?n.createElement(h,a(a({ref:t},p),{},{components:r})):n.createElement(h,a({ref:t},p))}));function d(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var u=r.length,a=new Array(u);a[0]=m;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:o,a[1]=i;for(var s=2;s<u;s++)a[s]=r[s];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},4024:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return i},contentTitle:function(){return c},metadata:function(){return s},toc:function(){return p},default:function(){return m}});var n=r(3117),o=r(102),u=(r(7294),r(3905)),a=["components"],i={title:"RouterSystem"},c=void 0,s={unversionedId:"RouterSystem",id:"RouterSystem",isDocsHomePage:!1,title:"RouterSystem",description:"Types",source:"@site/docs/RouterSystem.md",sourceDirName:".",slug:"/RouterSystem",permalink:"/docs/RouterSystem",tags:[],version:"current",frontMatter:{title:"RouterSystem"},sidebar:"defaultSidebar",next:{title:"TreeActions",permalink:"/docs/TreeActions"}},p=[{value:"Types",id:"types",children:[],level:2},{value:"Usage",id:"usage",children:[],level:2}],l={toc:p};function m(e){var t=e.components,r=(0,o.Z)(e,a);return(0,u.kt)("wrapper",(0,n.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,u.kt)("h2",{id:"types"},"Types"),(0,u.kt)("pre",null,(0,u.kt)("code",{parentName:"pre",className:"language-typescript"},"import {\n    startsWith,\n    isArray,\n    size,\n    assign,\n    cloneDeep,\n    forEach,\n    pullAt,\n    first,\n    isString\n} from 'lodash'\n\nexport interface routeType {\n    breadcrumb?: string\n    path?: string\n    routes?: routeType[]\n    [key: string]: any\n}\nexport type routesType = routeType['routes']\n\nexport default class RouterSystem {\n    protected routes: routesType\n    public restart: (routes: routesType) => void\n\n    /**\n     * @return cloneDeep routes\n     */\n    public getRoot: () => routesType\n\n    public add: (route: routeType, pathname?: string) => void\n    /**\n     * @return removed route\n     */\n    public remove: (pathname?: string) => routeType | void\n    public find: (pathname: string) => {\n        path: number[]\n        target: routeType\n    }\n    /**\n     * @description Use 'assign' merge routeConfig.\n     */\n    public update: (pathname: string, newRoute: routeType) => void\n}\n")),(0,u.kt)("h2",{id:"usage"},"Usage"),(0,u.kt)("pre",null,(0,u.kt)("code",{parentName:"pre",className:"language-typescript"},"import RouterSystem, { routesType } from '../src/RouterSystem'\nimport _ from 'lodash'\n\nconst routes: routesType = [\n    {\n        path: '/home',\n        breadcrumb: 'home',\n        routes: [\n            {\n                path: '/home/child',\n                breadcrumb: 'home/child',\n                routes: [\n                    {\n                        path: '/home/child/child',\n                        breadcrumb: 'home/child/child'\n                    }\n                ]\n            }\n        ]\n    },\n    {\n        path: '/home2',\n        breadcrumb: 'home2',\n        routes: [\n            {\n                path: '/home2/child',\n                breadcrumb: 'home2/child',\n                routes: [\n                    {\n                        path: '/home2/child/child',\n                        breadcrumb: 'home2/child/child'\n                    }\n                ]\n            }\n        ]\n    }\n]\n\nconst router1 = new RouterSystem(_.cloneDeep(routes))\nrouter1.find('/home2/child') // { target: routes[1].routes[0], path: [1, 0] }\nrouter1.find('/home2/3333') // { target: {}, path: [] }\nrouter1.update('/home2/child', {\n    breadcrumb: 'home2/child(updated)'\n})\nrouter1.find('/home2/child')\n//  target: { ...routes[1].routes[0], breadcrumb: 'home2/child(updated)' }, path: [1, 0] }\n\nconst router2 = new RouterSystem(_.cloneDeep(routes))\nrouter2.remove('/home2') // routes[1]\nrouter2.find('/home2') // { target: {}, path: [] }\n")))}m.isMDXComponent=!0}}]);